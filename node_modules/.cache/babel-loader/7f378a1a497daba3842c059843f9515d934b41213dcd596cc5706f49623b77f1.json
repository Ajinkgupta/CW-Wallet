{"ast":null,"code":"var _jsxFileName = \"/workspace/Cryptway-ETH-Wallet/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport APP from './pages/App';\nimport AccountSend from './pages/AccountSend';\nimport Navbar from './layout/nav';\nimport AccountTransactions from './pages/AccountTransactions';\nimport Recieve from './pages/recieve';\nimport { generateAccount } from './utils/AccountUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const recoveryPhraseKeyName = 'recoveryPhrase';\n  const [seedphrase, setSeedphrase] = useState('');\n  const [account, setAccount] = useState(null);\n  const [showRecoverInput, setShowRecoverInput] = useState(false);\n  function handleChange(event) {\n    setSeedphrase(event.target.value);\n  }\n  const handleKeyDown = async event => {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      recoverAccount(seedphrase);\n    }\n  };\n  const recoverAccount = useCallback(async recoveryPhrase => {\n    const result = await generateAccount(recoveryPhrase);\n    setAccount(result.account);\n    if (localStorage.getItem(recoveryPhraseKeyName) !== recoveryPhrase) {\n      localStorage.setItem(recoveryPhraseKeyName, recoveryPhrase);\n    }\n  }, []);\n  useEffect(() => {\n    const storedAccount = localStorage.getItem('account');\n    if (storedAccount) {\n      setAccount(JSON.parse(storedAccount));\n    }\n  }, []);\n  useEffect(() => {\n    const localStorageRecoveryPhrase = localStorage.getItem(recoveryPhraseKeyName);\n    if (localStorageRecoveryPhrase) {\n      setSeedphrase(localStorageRecoveryPhrase);\n      recoverAccount(localStorageRecoveryPhrase);\n    }\n  }, [recoverAccount]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-[#202124] w-full min-h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(APP, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/send\",\n          element: account ? /*#__PURE__*/_jsxDEV(AccountSend, {\n            account: account\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 32\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/history\",\n          element: account ? /*#__PURE__*/_jsxDEV(AccountTransactions, {\n            account: account\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 32\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/scan\",\n          element: /*#__PURE__*/_jsxDEV(Scan, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/show-qr\",\n          element: /*#__PURE__*/_jsxDEV(Recieve, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0PsI5KmWrb3QP83akia5jLsMH9I=\");\n_c = App;\nfunction Scan() {\n  window.location.replace('./scan.html');\n  return null;\n}\n_c2 = Scan;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Scan\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","BrowserRouter","Router","Route","Routes","APP","AccountSend","Navbar","AccountTransactions","Recieve","generateAccount","App","recoveryPhraseKeyName","seedphrase","setSeedphrase","account","setAccount","showRecoverInput","setShowRecoverInput","handleChange","event","target","value","handleKeyDown","keyCode","preventDefault","recoverAccount","recoveryPhrase","result","localStorage","getItem","setItem","storedAccount","JSON","parse","localStorageRecoveryPhrase","Scan","window","location","replace"],"sources":["/workspace/Cryptway-ETH-Wallet/src/App.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\n\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport APP from './pages/App';\n\nimport AccountSend from './pages/AccountSend';\nimport Navbar from './layout/nav';\nimport { Account } from './models/Account';\nimport AccountTransactions from './pages/AccountTransactions';\nimport Recieve from './pages/recieve';\nimport { generateAccount } from './utils/AccountUtils';\nfunction App() {\n  const recoveryPhraseKeyName = 'recoveryPhrase';\n  const [seedphrase, setSeedphrase] = useState('');\n  const [account, setAccount] = useState<Account | null>(null);\n  const [showRecoverInput, setShowRecoverInput] = useState(false);\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setSeedphrase(event.target.value);\n  }\n\n  const handleKeyDown = async (\n    event: React.KeyboardEvent<HTMLInputElement>\n  ) => {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      recoverAccount(seedphrase);\n    }\n  };\n\n  const recoverAccount = useCallback(async (recoveryPhrase: string) => {\n    const result = await generateAccount(recoveryPhrase);\n\n    setAccount(result.account);\n\n    if (localStorage.getItem(recoveryPhraseKeyName) !== recoveryPhrase) {\n      localStorage.setItem(recoveryPhraseKeyName, recoveryPhrase);\n    }\n  }, []);\n\n  useEffect(() => {\n    const storedAccount = localStorage.getItem('account');\n\n    if (storedAccount) {\n      setAccount(JSON.parse(storedAccount));\n    }\n  }, []);\n\n  useEffect(() => {\n    const localStorageRecoveryPhrase = localStorage.getItem(\n      recoveryPhraseKeyName\n    );\n    if (localStorageRecoveryPhrase) {\n      setSeedphrase(localStorageRecoveryPhrase);\n      recoverAccount(localStorageRecoveryPhrase);\n    }\n  }, [recoverAccount]);\n\n  return (\n    <Router>\n      <div className=\"bg-[#202124] w-full min-h-screen\">\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<APP />} />\n          <Route\n            path=\"/send\"\n            element={account ? <AccountSend account={account} /> : null}\n          />\n          <Route\n            path=\"/history\"\n            element={account ? <AccountTransactions account={account} /> : null}\n          />\n\n          <Route path=\"/scan\" element={<Scan />} />\n\n          <Route path=\"/show-qr\" element={<Recieve />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nfunction Scan() {\n  window.location.replace('./scan.html');\n  return null;\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}